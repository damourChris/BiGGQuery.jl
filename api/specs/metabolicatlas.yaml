openapi: "3.0.0"
info:
  description: "Metabolic Atlas can be accessed programmatically using this web API. Here we provide endpoints to get global information on the list of models integrated in Metabolic Atlas and to retrieve bulk or detailed information on those models. The API is still under development and might change without notice.\n\nThe results are returned in JSON format."
  version: "3.0"
  title: "Metabolic Atlas API"
  termsOfService: "https://metabolicatlas.org/about"
  contact:
    email: "contact@metabolicatlas.org"
  license:
    name: "GPL version 3"
    url: "https://www.gnu.org/licenses/gpl-3.0.html"
servers:
  - url: "https://metabolicatlas.org/api/v2"
    description: "Production server"
tags:
  - name: "Compartments"
    description: "Retrieve information about compartments."
  - name: "Genes"
    description: "Retrieve information about genes."
  - name: "GotEnzymes"
    description: "Retrieve information and cross references from GotEnzymes."
  - name: "Identifier"
    description: "Retrieve information about a given database identifier."
  - name: "Integrated models"
    description: "Retrieve information about integrated models."
  - name: "Interaction Partners"
    description: "Retrieve interaction partners for a given gene or metabolite."
  - name: "Metabolites"
    description: "Retrieve information about metabolites."
  - name: "Miscellaneous"
    description: "Miscellaneous queries."
  - name: "Reactions"
    description: "Retrieve information about reactions."
  - name: "Subsystems"
    description: "Retrieve information about subsystems."
paths:
  /repository/integrated_models:
    get:
      tags:
        - "Integrated models"
      summary: "List all integrated GEMs."
      description: "This query retrieves a list of all GEMs (genome-scale
        metabolic models) that Metabolic Atlas integrates. These GEMs are
        available through tools like GEM Browser, Map Viewer and Interaction
        Partners. No parameters are required for this query."
      operationId: "integratedModelListing"
      responses:
        "200":
          description: "Successful query"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelList"
        "401":
          description: "Not Found"
      security:
        - api_token: []
  /repository/integrated_models/{name}:
    get:
      tags:
        - "Integrated models"
      summary: "Get information for a given GEM."
      description:
        "This query retrieve information for a given GEM (genome-scale
        metabolic model). The GEMs are available through tools like GEM Browser,
        Map Viewer and Interaction Partners."
      operationId: "integratedModelInfo"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "path"
          required: true
          type: "string"
          description: "the original GEM name, e.g. **Human-GEM**"
      responses:
        "200":
          description: "Successful query"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model"
        "429":
          description: "Too many requests"
        "404":
          description: "Invalid input"
  /compartments/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the compartment identifier, e.g. **golgi_apparatus**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
      - name: "full"
        in: "query"
        required: false
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "if left out, or set to false, only get the number of metabolites, genes, reactions contained by the given compartment."
        default: "true"
    get:
      tags:
        - "Compartments"
      summary: "Get information for a given compartment."
      description: "This query retrieves all the metabolites, genes, reactions
        and subsystems contained by the given compartment."
      operationId: "compartmentInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Compartment"
        "401":
          description: "Invalid input"
        "429":
          description: "Too many requests"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /compartments/{id}/related-reactions:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the compartment ID, e.g. **golgi_apparatus**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Compartments"
      summary: "Get related reactions for a given compartment."
      description: "This query retrieves all the related reactions for a given compartment. There reactions are associated to compartments via the compartmentalized metabolites."
      operationId: "compartmentRelatedReactionInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /genes/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the gene ID, e.g. **ENSG00000196502**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Genes"
      summary: "Get information for a given gene."
      description: "This query retrieves all the information for a given gene."
      operationId: "geneInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /genes/{id}/related-reactions:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the gene ID, e.g. **ENSG00000196502**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Genes"
      summary: "Get related reactions for a given gene."
      description: "This query retrieve all the reactions related to the specified gene."
      operationId: "geneRelatedReactionInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /metabolites/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the metabolite ID, e.g. **MAM01587m**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Metabolites"
      summary: "Get information for a given metabolite."
      description: "This query retrieves all the information about the specified metabolite."
      operationId: "metaboliteInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /metabolites/{id}/related-reactions:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the metabolite ID, e.g. **MAM01587m**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Metabolites"
      summary: "Get related reactions for a given metabolite."
      description: "This query retrieves all the related reactions that involve the specified metabolite."
      operationId: "metaboliteRelatedReactionInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /metabolites/{id}/related-metabolites:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the metabolite ID, e.g. **MAM01587m**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Metabolites"
      summary: "Get related metabolites for a given metabolite."
      description:
        "This query retrieves all related metabolites involving a given
        metabolite. Metabolites are compartmentalized, which means that the
        related metabolites are equivalent metabolites in other compartments."
      operationId: "metaboliteRelatedMetaboliteInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "404":
          description: "Invalid input"
      security:
        - api_token: []

  /reactions/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the reaction ID, e.g. **MAR03000**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Reactions"
      summary: "Get information for a given reaction."
      description: "This query retrieves all the information we have on a reaction."
      operationId: "reactionInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
  /reactions/{id}/related-reactions:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the reaction ID, e.g. **MAR03000**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Reactions"
      summary: "Get related reactions involving a given reaction."
      description:
        "This query retrieves all related reactions involving a given reaction.
        A limit of 1000 related reactions is applied. These related reactions are
        computed based on the sharing of related (equivalent) metabolites."
      operationId: "reactionRelatedReactionInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /subsystems/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the subsystem ID, e.g. **eicosanoid_metabolism**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Subsystems"
      summary: "Get information for a given subsystem."
      description:
        "This query retrieves all the information for a given subsystem, which
        includes names and identifiers for metabolites, genes, and compartments."
      operationId: "subsystemInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "404":
          description: "Invalid input"
  /subsystems/{id}/related-reactions:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the subsystem ID, e.g. **eicosanoid_metabolism**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Subsystems"
      summary: "Get related reactions for a given subsystem."
      description:
        "This query retrieves all the reactions for a specified subsystem.
        The query limits the results to 1000 related reactions."
      operationId: "subsystemRelatedReactionInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /interaction-partners/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the gene ID, e.g. **ENSG00000196502** or the metabolite ID, e.g. **MAM03933c**"
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
    get:
      tags:
        - "Interaction Partners"
      summary: "Get interaction partners for a given gene or metabolite."
      description:
        "This query retrieves all first order interaction partners for
        a given gene or metabolite."
      operationId: "interactionPartners"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /maps/listing:
    parameters:
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **YeastGem**"
    get:
      tags:
        - "Miscellaneous"
      summary: "List all compartments and subsystems for a GEM."
      description:
        "This query retrieves a list of all compartments and subsystems that are
        available on Metabolic Atlas for a specified GEM. This includes identifiers
        for the SVG maps. **Note that the response is large and might cause the browser to hang.**"
      operationId: "mapListing"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /random-components:
    parameters:
      - name: "model"
        in: "query"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the model name, e.g. **HumanGem**"
      # - name: "componentTypes"
      #   in: "query"
      #   type: object
      #   default: { "gene": true, "compartmentalizedMetabolite": true }
      #   required: true
      #   description: 'list of component types to return, e.g. **{"gene":true, "compartmentalizedMetabolite": true}**'
    get:
      tags:
        - "Miscellaneous"
      summary: "Get random components for a GEM."
      description:
        "This query retrieves detailed information for a random sample of
        genes, metabolites, compartments, reactions and subsystems."
      operationId: "randomComponentInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /gotenzymes/reactions/{reactionId}:
    parameters:
      - name: "reactionId"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the reaction id, e.g. **R01677**"
    get:
      tags:
        - "GotEnzymes"
      summary: "Get information and cross references for the given reaction."
      operationId: "gotEnzymesReactionInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Not found"
        "404":
          description: "Not found"
      security:
        - api_token: []
  /gotenzymes/genes/{geneId}:
    parameters:
      - name: "geneId"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the gene id, e.g. **zwf**"
    get:
      tags:
        - "GotEnzymes"
      summary: "Get information and cross references for the given gene."
      operationId: "gotEnzymesGeneInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Not found"
        "404":
          description: "Not found"
      security:
        - api_token: []

  /gotenzymes/ecs/{ecNumber}:
    parameters:
      - name: "ecNumber"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the ec number, e.g. **2.5.1.19**"
    get:
      tags:
        - "GotEnzymes"
      summary: "Get information and cross references for the given ec number."
      operationId: "gotEnzymesECInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Not found"
        "404":
          description: "Not found"
      security:
        - api_token: []
  /gotenzymes/compounds/{compoundId}:
    parameters:
      - name: "compoundId"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the compound id, e.g. **C00003**"
    get:
      tags:
        - "GotEnzymes"
      summary: "Get information and cross references for the given compound."
      operationId: "gotEnzymesCompoundInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "404":
          description: "Not found"
      security:
        - api_token: []
  /gotenzymes/organisms/{organismId}:
    parameters:
      - name: "organismId"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the organism id, e.g. **hsa**"
    get:
      tags:
        - "GotEnzymes"
      summary: "Get information and cross references for the given organism."
      operationId: "gotEnzymesOrganismInfo"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Not found"
        "404":
          description: "Not found"
      security:
        - api_token: []
  /gotenzymes/enzymes:
    parameters:
      - name: "filters[reaction_id]"
        in: "query"
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the reaction id, e.g. **R00835** (or leave empty for more results)"
        default: "R00835"
      - name: "filters[gene]"
        in: "query"
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the gene id, e.g. **zwf** (or leave empty for more results)"
        default: "zwf"
      - name: "filters[ec_number]"
        in: "query"
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_.]+$"
        description: "the ec number, e.g. **1.1.1.49** (or leave empty for more results)"
        default: "1.1.1.49"
      - name: "filters[compound]"
        in: "query"
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the compound id, e.g. **C00092** (or leave empty for more results)"
        default: "C00092"
      - name: "filters[organism]"
        in: "query"
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the organism id, e.g. **cpj** (or leave empty for more results)"
        default: "cpj"
      - name: "filters[domain]"
        in: "query"
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the domain id, e.g. **B** (or leave empty for more results)"
        default: "B"
      - name: "pagination[pageSize]"
        in: "query"
        type: "integer"
        maximum: 100
        minimum: 0
        format: "int32"
        description: "How many results to return by each page, e.g. **50** (50 by default if left empty)"
        default: "50"
      - name: "pagination[page]"
        in: "query"
        type: integer
        maximum: 100
        minimum: 0
        format: "int32"
        description: "Which result page to return, e.g. **1** (1 by default if left empty)"
        default: 1
      - name: "pagination[column]"
        in: "query"
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "Which column to sort on, e.g. **gene** (gene by default if left empty)"
        default: "gene"
      - name: "pagination[isAscending]"
        in: "query"
        type: string
        maxLength: 5
        pattern: "^(true|false)$"
        description: "If result should be in ascending or descending order (true by default if left empty)"
        default: "true"
    get:
      tags:
        - "GotEnzymes"
      summary: "Search for GotEnzymes predicted kcat."
      description: "This query retrieves the predicted kcat for reactions, genes, ec numbers, compounds, organisms and domains matching the provided parameters. The results are paginated to handle large results, this can also be configured through parameters provided."
      operationId: "gotEnzymes"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []
  /identifier/{dbName}/{externalId}:
    parameters:
      - name: "dbName"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the name of the database, e.g. **Protein Atlas** or **MetabolicAtlas**"
      - name: "externalId"
        in: "path"
        required: true
        type: "string"
        maxLength: 200
        pattern: "^[a-zA-Z0-9_]+$"
        description: "the external ID, e.g. **ENSG00000120915** or **MAR02279** for *Protein Atlas* and *MetabolicAtlas* respectively"
    get:
      tags:
        - "Identifier"
      summary: "Get model components for a given database identifier"
      description: "This query retrieves the Metabolic Atlas components that a database identifier is associated with, across all integrated models."
      operationId: "identifier"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful query"
        "401":
          description: "Invalid input"
        "404":
          description: "Invalid input"
      security:
        - api_token: []

components:
  schemas:
    ModelList:
      type: array
      maxItems: 100
      items:
        allOf:
          - $ref: "#/components/schemas/Model"
          - type: object
            properties:
              apiName:
                type: string
                maxLength: 100
                pattern: "^[a-zA-Z0-9_]+$"
              apiVersion:
                type: string
                maxLength: 100
                pattern: "^[a-zA-Z0-9_]+$"
              gene_count:
                type: integer
                format: int32
                minimum: 0
                maximum: 15000
              reaction_count:
                type: integer
                format: int32
                minimum: 0
                maximum: 15000
              metabolite_count:
                type: integer
                format: int32
                minimum: 0
                maximum: 15000
    Model:
      type: object
      properties:
        short_name:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z0-9_]+$"
        full_name:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z0-9_]+$"
        description:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z0-9_]+$"
        version:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z0-9_]+$"
        link:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z0-9_]+$"
        chat_link:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z0-9_]+$"
        authors:
          type: array
          maxItems: 50
          items:
            type: object
            properties:
              given_name:
                type: string
                maxLength: 100
                pattern: "^[a-zA-Z0-9_]+$"
              family_name:
                type: string
                maxLength: 100
                pattern: "^[a-zA-Z0-9_]+$"
              email:
                type: string
                format: email
                maxLength: 100
              organization:
                type: string
                maxLength: 100
                pattern: "^[a-zA-Z0-9_]+$"
            required:
              - given_name
              - family_name
              - email
              - organization
        condition:
          type: string
          maxLength: 100
          pattern: "^[a-zA-Z0-9_]+$"
        date:
          type: string
          format: date
          maxLength: 100
        sample:
          type: object
          properties:
            organism:
              type: string
              maxLength: 100
              pattern: "^[a-zA-Z0-9_]+$"
            organ_system:
              type: "string"
              maxLength: 100
              pattern: "^[a-zA-Z0-9_]+$"
            tissue:
              type: "string"
            cell_type:
              type: string
              maxLength: 100
              pattern: "^[a-zA-Z0-9_]+$"
            cell_line:
              type: "null"
              maxLength: 100
              pattern: "^[a-zA-Z0-9_]+$"
          additionalProperties: false
        ref:
          type: array
          maxItems: 50
          items:
            type: string
            maxLength: 100
            pattern: "^[a-zA-Z0-9_]+$"
      additionalProperties: false
    Compartment:
      type: object
      properties:
        info:
          type: object
          properties:
            metabolitesCount:
              type: integer
            letterCode:
              type: string
            reactionsCount:
              type: integer
            genesCount:
              type: integer
            name:
              type: string
            id:
              type: string
            subsystemCount:
              type: integer
          required:
            - metabolitesCount
            - letterCode
            - reactionsCount
            - genesCount
            - name
            - id
            - subsystemCount
          additionalProperties: false
        compartmentSVGs:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              customName:
                type: string
              svgMaps:
                type: array
                items:
                  type: object
                  properties:
                    filename:
                      type: string
                    customName:
                      type: string
                    id:
                      type: string
        externalDbs:
          type: array
          items: {}
        subsystems:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              id:
                type: string
            required:
              - name
              - id
      additionalProperties: false
      required:
        - info
        - compartmentSVGs
        - externalDbs
        - subsystems
